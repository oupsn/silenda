// Code generated by go-swagger; DO NOT EDIT.

package secret

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/wuhoops/silenda/cli/models"
)

// FindAllSecretsByWorkspaceIDReader is a Reader for the FindAllSecretsByWorkspaceID structure.
type FindAllSecretsByWorkspaceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindAllSecretsByWorkspaceIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindAllSecretsByWorkspaceIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFindAllSecretsByWorkspaceIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewFindAllSecretsByWorkspaceIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /secret.findAllSecretsByWorkspaceId] findAllSecretsByWorkspaceId", response, response.Code())
	}
}

// NewFindAllSecretsByWorkspaceIDOK creates a FindAllSecretsByWorkspaceIDOK with default headers values
func NewFindAllSecretsByWorkspaceIDOK() *FindAllSecretsByWorkspaceIDOK {
	return &FindAllSecretsByWorkspaceIDOK{}
}

/*
FindAllSecretsByWorkspaceIDOK describes a response with status code 200, with default header values.

OK
*/
type FindAllSecretsByWorkspaceIDOK struct {
	Payload *models.FindAllSecretsByWorkspaceIDResponse
}

// IsSuccess returns true when this find all secrets by workspace Id o k response has a 2xx status code
func (o *FindAllSecretsByWorkspaceIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this find all secrets by workspace Id o k response has a 3xx status code
func (o *FindAllSecretsByWorkspaceIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find all secrets by workspace Id o k response has a 4xx status code
func (o *FindAllSecretsByWorkspaceIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this find all secrets by workspace Id o k response has a 5xx status code
func (o *FindAllSecretsByWorkspaceIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this find all secrets by workspace Id o k response a status code equal to that given
func (o *FindAllSecretsByWorkspaceIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the find all secrets by workspace Id o k response
func (o *FindAllSecretsByWorkspaceIDOK) Code() int {
	return 200
}

func (o *FindAllSecretsByWorkspaceIDOK) Error() string {
	return fmt.Sprintf("[POST /secret.findAllSecretsByWorkspaceId][%d] findAllSecretsByWorkspaceIdOK  %+v", 200, o.Payload)
}

func (o *FindAllSecretsByWorkspaceIDOK) String() string {
	return fmt.Sprintf("[POST /secret.findAllSecretsByWorkspaceId][%d] findAllSecretsByWorkspaceIdOK  %+v", 200, o.Payload)
}

func (o *FindAllSecretsByWorkspaceIDOK) GetPayload() *models.FindAllSecretsByWorkspaceIDResponse {
	return o.Payload
}

func (o *FindAllSecretsByWorkspaceIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FindAllSecretsByWorkspaceIDResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindAllSecretsByWorkspaceIDBadRequest creates a FindAllSecretsByWorkspaceIDBadRequest with default headers values
func NewFindAllSecretsByWorkspaceIDBadRequest() *FindAllSecretsByWorkspaceIDBadRequest {
	return &FindAllSecretsByWorkspaceIDBadRequest{}
}

/*
FindAllSecretsByWorkspaceIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type FindAllSecretsByWorkspaceIDBadRequest struct {
	Payload *models.HandlersErrResponse
}

// IsSuccess returns true when this find all secrets by workspace Id bad request response has a 2xx status code
func (o *FindAllSecretsByWorkspaceIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this find all secrets by workspace Id bad request response has a 3xx status code
func (o *FindAllSecretsByWorkspaceIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find all secrets by workspace Id bad request response has a 4xx status code
func (o *FindAllSecretsByWorkspaceIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this find all secrets by workspace Id bad request response has a 5xx status code
func (o *FindAllSecretsByWorkspaceIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this find all secrets by workspace Id bad request response a status code equal to that given
func (o *FindAllSecretsByWorkspaceIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the find all secrets by workspace Id bad request response
func (o *FindAllSecretsByWorkspaceIDBadRequest) Code() int {
	return 400
}

func (o *FindAllSecretsByWorkspaceIDBadRequest) Error() string {
	return fmt.Sprintf("[POST /secret.findAllSecretsByWorkspaceId][%d] findAllSecretsByWorkspaceIdBadRequest  %+v", 400, o.Payload)
}

func (o *FindAllSecretsByWorkspaceIDBadRequest) String() string {
	return fmt.Sprintf("[POST /secret.findAllSecretsByWorkspaceId][%d] findAllSecretsByWorkspaceIdBadRequest  %+v", 400, o.Payload)
}

func (o *FindAllSecretsByWorkspaceIDBadRequest) GetPayload() *models.HandlersErrResponse {
	return o.Payload
}

func (o *FindAllSecretsByWorkspaceIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HandlersErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindAllSecretsByWorkspaceIDInternalServerError creates a FindAllSecretsByWorkspaceIDInternalServerError with default headers values
func NewFindAllSecretsByWorkspaceIDInternalServerError() *FindAllSecretsByWorkspaceIDInternalServerError {
	return &FindAllSecretsByWorkspaceIDInternalServerError{}
}

/*
FindAllSecretsByWorkspaceIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type FindAllSecretsByWorkspaceIDInternalServerError struct {
	Payload *models.HandlersErrResponse
}

// IsSuccess returns true when this find all secrets by workspace Id internal server error response has a 2xx status code
func (o *FindAllSecretsByWorkspaceIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this find all secrets by workspace Id internal server error response has a 3xx status code
func (o *FindAllSecretsByWorkspaceIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find all secrets by workspace Id internal server error response has a 4xx status code
func (o *FindAllSecretsByWorkspaceIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this find all secrets by workspace Id internal server error response has a 5xx status code
func (o *FindAllSecretsByWorkspaceIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this find all secrets by workspace Id internal server error response a status code equal to that given
func (o *FindAllSecretsByWorkspaceIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the find all secrets by workspace Id internal server error response
func (o *FindAllSecretsByWorkspaceIDInternalServerError) Code() int {
	return 500
}

func (o *FindAllSecretsByWorkspaceIDInternalServerError) Error() string {
	return fmt.Sprintf("[POST /secret.findAllSecretsByWorkspaceId][%d] findAllSecretsByWorkspaceIdInternalServerError  %+v", 500, o.Payload)
}

func (o *FindAllSecretsByWorkspaceIDInternalServerError) String() string {
	return fmt.Sprintf("[POST /secret.findAllSecretsByWorkspaceId][%d] findAllSecretsByWorkspaceIdInternalServerError  %+v", 500, o.Payload)
}

func (o *FindAllSecretsByWorkspaceIDInternalServerError) GetPayload() *models.HandlersErrResponse {
	return o.Payload
}

func (o *FindAllSecretsByWorkspaceIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HandlersErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
